import {type NextPage} from "next";
import {signIn, signOut, useSession} from "next-auth/react";
import Head from "next/head";
import Link from "next/link";
import {api} from "~/utils/api";
import {Button} from "@mantine/core";
import {useEffect, useState} from "react";

const Home: NextPage = () => {
    const [draw, setDraw] = useState<boolean>(false);

    useEffect(() => {
        setDraw(true);
    }, [])

    return (
        <>
            <Head>
                <title>CompSci like i'm five</title>
                <meta name="description" content="Generated by create-t3-app"/>
                <link rel="icon" href="/favicon.ico"/>
            </Head>
            <main
                className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#577D86] to-[#B9EDDD]">
                    <div
                        className={`text-center relative transition-opacity duration-1000 ${draw ? 'opacity-100' : 'opacity-0'}`}>
                        <h1 className="text-5xl font-bold text-white mb-8 mt-16">CompSci Like I'm Five</h1>
                        <p className="text-sm text-white mb-12">Explaining computer science papers so well, a five year
                            old could understand.</p>
                        <Link href={"/paper-import"}>
                            <Button className={"bg-gray-700 hover:bg-gray-800"}>
                                <p>Lets get started</p>
                            </Button>
                        </Link>
                    </div>
            </main>
        </>
    );
};

export default Home;

const AuthShowcase: React.FC = () => {
    const {data: sessionData} = useSession();

    const {data: secretMessage} = api.example.getSecretMessage.useQuery(
        undefined, // no input
        {enabled: sessionData?.user !== undefined},
    );

    return (
        <div className="flex flex-col items-center justify-center gap-4">
            <p className="text-center text-2xl text-white">
                {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
                {secretMessage && <span> - {secretMessage}</span>}
            </p>
            <button
                className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
                onClick={sessionData ? () => void signOut() : () => void signIn()}
            >
                {sessionData ? "Sign out" : "Sign in"}
            </button>
        </div>
    );
};
